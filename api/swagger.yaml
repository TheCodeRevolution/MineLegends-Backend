---
swagger: "2.0"
info:
  description: "API for managing players. It allows you to create, update, delete,\
    \ and retrieve players by UUID, as well as retrieve all players."
  version: "1.0.0"
  title: "Backend"
  contact:
    name: "ExMicrosftDev"
    email: "dataoutputyt@gmail.com"
  license:
    name: "MIT"
    url: "http://opensource.org/licenses/MIT"
basePath: "/v1"
tags:
- name: "Player"
  description: "All routes related to Player"
schemes:
- "http"
- "https"
consumes:
- "application/json"
- "application/x-www-form-urlencoded"
produces:
- "application/json"
security:
- apiKey: []
paths:
  /player:
    get:
      tags:
      - "Player"
      summary: "Get All Players"
      description: "Retrieve a list of all players."
      operationId: "getPlayers"
      parameters: []
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BackendPlayer"
      x-swagger-router-controller: "Player"
    post:
      tags:
      - "Player"
      summary: "Create a new Player"
      description: "Creates a new player with the provided data."
      operationId: "createPlayer"
      parameters:
      - name: "uuid"
        in: "formData"
        description: "UUID of the Player"
        required: true
        type: "string"
      - name: "username"
        in: "formData"
        description: "Username of the Player"
        required: true
        type: "string"
      - name: "language"
        in: "formData"
        description: "Language of the Player (e.g., 'de', 'en')"
        required: false
        type: "string"
      - name: "playTime"
        in: "formData"
        description: "Play time of the Player (in long integer format)"
        required: true
        type: "integer"
        format: "int64"
      - name: "emeralds"
        in: "formData"
        description: "Number of emeralds the Player has"
        required: true
        type: "integer"
        format: "int32"
      - name: "created_at"
        in: "formData"
        description: "Creation timestamp (ISO 8601 format)"
        required: false
        type: "string"
        format: "date-time"
      - name: "updated_at"
        in: "formData"
        description: "Last update timestamp (ISO 8601 format)"
        required: false
        type: "string"
        format: "date-time"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/BackendPlayer"
      x-swagger-router-controller: "Player"
  /player/{uuid}:
    get:
      tags:
      - "Player"
      summary: "Get Player Data"
      description: "Retrieve a player's data by its UUID."
      operationId: "getPlayer"
      parameters:
      - name: "uuid"
        in: "path"
        description: "UUID of the Player"
        required: true
        type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/BackendPlayer"
      x-swagger-router-controller: "Player"
    put:
      tags:
      - "Player"
      summary: "Update Player"
      description: "Update an existing player's information."
      operationId: "updatePlayer"
      parameters:
      - name: "uuid"
        in: "path"
        description: "UUID of the Player"
        required: true
        type: "string"
      - name: "username"
        in: "formData"
        description: "Username of the Player"
        required: true
        type: "string"
      - name: "language"
        in: "formData"
        description: "Language of the Player (e.g., 'de', 'en')"
        required: false
        type: "string"
      - name: "playTime"
        in: "formData"
        description: "Play time of the Player (in long integer format)"
        required: true
        type: "integer"
        format: "int64"
      - name: "emeralds"
        in: "formData"
        description: "Number of emeralds the Player has"
        required: true
        type: "integer"
        format: "int32"
      - name: "created_at"
        in: "formData"
        description: "Creation timestamp (ISO 8601 format)"
        required: false
        type: "string"
        format: "date-time"
      - name: "updated_at"
        in: "formData"
        description: "Last update timestamp (ISO 8601 format)"
        required: false
        type: "string"
        format: "date-time"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/BackendPlayer"
      x-swagger-router-controller: "Player"
    delete:
      tags:
      - "Player"
      summary: "Delete Player"
      description: "Delete a player by its UUID."
      operationId: "deletePlayer"
      parameters:
      - name: "uuid"
        in: "path"
        description: "UUID of the Player"
        required: true
        type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/BackendPlayer"
      x-swagger-router-controller: "Player"
securityDefinitions:
  apiKey:
    type: "apiKey"
    name: "authorization"
    in: "header"
definitions:
  BackendPlayer:
    type: "object"
    required:
    - "created_at"
    - "emeralds"
    - "playTime"
    - "updated_at"
    - "username"
    - "uuid"
    properties:
      uuid:
        type: "string"
        example: "123e4567-e89b-12d3-a456-426614174000"
        description: "Unique identifier of the player"
      username:
        type: "string"
        example: "player123"
        description: "Username of the player"
      language:
        type: "string"
        example: "en"
        description: "Language of the player (e.g., 'de', 'en')"
      playTime:
        type: "integer"
        format: "int64"
        example: 120
        description: "Play time of the player (in long integer format)"
      emeralds:
        type: "integer"
        format: "int32"
        example: 150
        description: "Number of emeralds the player has"
      created_at:
        type: "string"
        format: "date-time"
        example: "2025-01-01T12:00:00Z"
        description: "Timestamp when the player was created"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2025-01-15T15:30:00Z"
        description: "Timestamp when the player was last updated"
    example:
      uuid: "123e4567-e89b-12d3-a456-426614174000"
      username: "player123"
      language: "en"
      playTime: 120
      emeralds: 150
      created_at: "2025-01-01T12:00:00Z"
      updated_at: "2025-01-15T15:30:00Z"
parameters:
  uuidParam:
    name: "uuid"
    in: "path"
    description: "UUID of the Player"
    required: true
    type: "string"
